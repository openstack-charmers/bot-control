# OpenStack Charm CI - Charm Pusher Job Generator for Jenkins-Job-Builder
#   Renders (Charms) x (Branches) = (Lots of Jobs) so we can forget about XML
#
- defaults:
    name: global
    description: |
        <p>Watch for git commits and kick off charmstore charm upload/publish paths.</p>
        <p><i>Dynamically Generated Job - Do not edit through the Jenkins Web UI.  You will lose your changes.</i></p>

- project:
    name: project-charm-pusher
    charm:
      - aodh
      - barbican
      - barbican-softhsm
      - ceilometer
      - ceilometer-agent
      - ceph
      - ceph-osd
      - ceph-proxy
      - ceph-mon
      - ceph-radosgw
      - cinder
      - cinder-backup
      - cinder-ceph
      - designate
      - designate-bind
      - glance
      - hacluster
      - heat
      - keystone
      - lxd
      - neutron-api
      - neutron-api-odl
      - neutron-gateway
      - neutron-openvswitch
      - nova-cloud-controller
      - nova-compute
      - odl-controller
      - openstack-dashboard
      - openvswitch-odl
      - percona-cluster
      - rabbitmq-server
      - swift-proxy
      - swift-storage
      - tempest
# FYI - Jenkins job names cannot contain slashes, so we cannot use branch
# as a pivot point to simplify.
#    branch:
#      - master
#      - stable/NN.NN
    jobs:
      - 'charm_pusher_{charm}_master'
      - 'charm_pusher_{charm}_stable'
      - 'charm_pusher_noop_debug'

# MASTER
- job-template:
    name: 'charm_pusher_{charm}_master'
    node: slave
    parameters:
        - string:
            name: BASE_NAME
            default: '{charm}'
            description: Asset name (charm name).
        - string:
            name: GIT_BRANCH
            default: master
            description: Git branch.  Generally master or stable/nn.nn.
        - CHARM_PUSH_DRY_RUN
        - DISPLAY_NAME
    scm:
      - git:
         url: https://github.com/openstack/charm-{charm}
         basedir: '{charm}'
         skip-tag: true
         fastpoll: true
         shallow-clone: true
         clean: {before: true}
         branches:
          - master
    triggers:
      - pollscm:
          cron: 'H/5 * * * *'
          ignore-post-commit-hooks: True
    builders:
      - prep_osci_repo_if_necessary
      - build_charm_push_and_publish
    publishers:
        - archive_artifacts
        - email_peeps

# STABLE CURRENT
- job-template:
    name: 'charm_pusher_{charm}_stable'
    node: slave
    parameters:
        - string:
            name: BASE_NAME
            default: '{charm}'
            description: Asset name (charm name).
        - string:
            name: GIT_BRANCH
            default: stable/16.07
            description: Git branch.  Generally master or stable/nn.nn.
        - CHARM_PUSH_DRY_RUN
        - DISPLAY_NAME
    scm:
      - git:
         url: https://github.com/openstack/charm-{charm}
         basedir: '{charm}'
         skip-tag: true
         fastpoll: true
         shallow-clone: true
         clean: {before: true}
         branches:
          - stable/16.07
    triggers:
      - pollscm:
          cron: 'H/5 * * * *'
          ignore-post-commit-hooks: True
    builders:
      - prep_osci_repo_if_necessary
      - build_charm_push_and_publish
    publishers:
        - archive_artifacts
        - email_peeps

# NO-OP DEBUG JOB
- job-template:
    name: 'charm_pusher_noop_debug'
    node: slave
    parameters:
        - string:
            name: BASE_NAME
            default: 'trigger-test'
            description: Asset name (charm name).
        - string:
            name: GIT_BRANCH
            default: master
            description: Git branch.  Generally master or stable/nn.nn.
        - CHARM_PUSH_DRY_RUN
        - DISPLAY_NAME
    scm:
      - git:
         url: https://github.com/ryan-beisner/trigger-test
         basedir: 'trigger-test'
         skip-tag: true
         fastpoll: true
         shallow-clone: true
         clean: {before: true}
         branches:
          - master
    triggers:
      - pollscm:
          cron: 'H/5 * * * *'
          ignore-post-commit-hooks: True
    builders:
      - prep_osci_repo_if_necessary
      - build_charm_push_and_publish
    publishers:
        - archive_artifacts
        - email_peeps

- builder:
    name: build_charm_push_and_publish
    builders:
        - shell: |
            #!/bin/bash -e
            ${OSCI_ROOT}/job-parts/build_charm_push_and_publish.sh

- builder:
    name: prep_osci_repo_if_necessary
    builders:
        - shell: |
            #!/bin/bash -e
            # Ensure we have a checkout of UOSCI code
            if [[ ! -f $OSCI_ROOT/job-parts/osci_job_common.sh ]]; then
              echo " - Removing checkout @ $OSCI_ROOT if it exists"
              rm -rf $OSCI_ROOT ||:
              echo " + Creating new lightweight checkout of $OSCI_REPO @ $OSCI_ROOT."
              bzr co --lightweight $OSCI_REPO $OSCI_ROOT
              echo "revno: $(bzr revno $OSCI_ROOT)"
            fi

- parameter:
    name: CHARM_PUSH_DRY_RUN
    parameters:
        - bool:
            name: CHARM_PUSH_DRY_RUN
            default: false
            description: Optionally take no action, just run for debug purpose.

- parameter:
    name: DISPLAY_NAME
    parameters:
        - string:
            name: DISPLAY_NAME
            description: Optional string to add to the Build Name of the job.

- publisher:
    name: archive_artifacts
    publishers:
        - archive:
            artifacts: '*, logs/*'
            allow-empty: true
            fingerprint: true

- publisher:
    name: email_peeps
    publishers:
        - email-ext:
            # XXX Don't commit email addresses to this repo.  Update when regenerating.
            recipients: foo@host.local, bar@host.local
            reply-to: foo@host.local
            content-type: text
            subject: '[UOSCI] $DEFAULT_SUBJECT - ${ENV,var="BASE_NAME"} ${ENV,var="GIT_BRANCH"} ${ENV,var="DISPLAY_NAME"}'
            body: |
                $DEFAULT_SUBJECT
                ${ENV,var="BASE_NAME"} ${ENV,var="DISPLAY_NAME"}
                ${GIT_URL} (${GIT_BRANCH})
                ${GIT_COMMIT}

                Charm store refs published:
                ${FILE,path="cs_refs_published.txt"}
            attachments: cs_refs_published.txt
            attach-build-log: true
            disable-publisher: false
            success: true
            failure: true
            presend-script: $DEFAULT_PRESEND_SCRIPT
            save-output: false
