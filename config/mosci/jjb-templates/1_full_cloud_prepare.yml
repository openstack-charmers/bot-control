- job:
    description: |-
      Prepare cloud for deployment
      1. Discover - is there another node with a model bootstrapped for this architecture? If so, chose what to do based on params.
      1a. Use existing controller - pass params to bootstrap job
      1b. Create new controller - pass params to bootstrap job

      2. Do something slightly different based on ARCH:
      2a. Is this s390x? If so, this is manual provider stuff, plus static NAT, and specific scripts will need to be run prior to bootstrapping.
    disabled: false
    name: '1. Full Cloud - Prepare'
    parameters:
    - choice:
        choices:
        - amd64
        - arm64
        - ppc64el
        - s390x
        description: Which architecture to deploy on
        name: ARCH
    - bool:
        default: false
        description: Is this an openstack-on-lxd deployment?
        name: LXD
    - choice:
        choices:
        - ruxton
        - icarus
        - s390x
        description: ''
        name: CLOUD_NAME
    - bool:
        default: true
        description: |-
          If TRUE, use jenkins slave as controller node.

          If FALSE, a node will be requested from CLOUD_NAME to act as the bootstrap node. In this scenario, bootstrap and model constraints will be the same.
        name: BOOTSTRAP_ON_SLAVE
    - text:
        default: ''
        description: 'Specify env vars to override novarc and / or osciirc '
        name: CUSTOM_ENV_VARS
        trim: false
    - bool:
        default: false
        description: |-
          If TRUE, when this job is run, it will hunt down any existing controllers for this architecture, destroy them and all their models, and create a new controller.

          If FALSE, this job will create a new model on an existing controller. If no controller exists it will create a new one.

          NB: At the time of creating this job, there were not enough arm64 or power8 machines to run parallel jobs.
        name: FORCE_NEW_CONTROLLER
    - string:
        default: ''
        description: Specify that this job should run on a specific slave
        name: SLAVE_NODE_NAME
        trim: false
    - bool:
        default: false
        description: 'Force any offline slaves with SLAVE_LABEL online (incase they
          have been left offline by accident) to optimise parallel job runs '
        name: ONLINE_ALL_SLAVES
    - string:
        default: slave
        description: Label to use during selection (and sticking) of pipeline jobs.
        name: SLAVE_LABEL
        trim: false
    - string:
        default: https://github.com/openstack-charmers/charm-test-infra
        description: ''
        name: CTI_GIT_REPO
        trim: false
    - string:
        default: admcleod_test
        description: ''
        name: CTI_GIT_BRANCH
        trim: false
    - string:
        default: tags=uosci
        description: |
          Arch, tags, etc, on a single line, to apply to the controller machine,e.g. (will override ARCH param)

          arch=amd64 tags=uosci series=xenial
        name: BOOTSTRAP_CONSTRAINTS
        trim: false
    - string:
        default: tags=uosci
        description: |-
          Arch, tags, etc, on a single line, to apply to machines in the model,e.g. (will override ARCH param)

          arch=amd64 tags=uosci series=xenial
        name: MODEL_CONSTRAINTS
        trim: false
    - string:
        default: ''
        description: Specify custom workspace
        name: WORKSPACE
        trim: false
    - string:
        default: https://github.com/openstack-charmers/openstack-charm-testing
        description: ''
        name: OCT_GIT_REPO
        trim: false
    - string:
        default: mosci
        description: ''
        name: OCT_GIT_BRANCH
        trim: false
    - string:
        default: ''
        description: API Key for ruxton-maas
        name: RUXTON_API_KEY
        trim: false
    - string:
        default: ''
        description: API Key for icarus-maas
        name: ICARUS_API_KEY
        trim: false
    - bool:
        default: false
        description: If enabled, attempt to release all nodes on CLOUD_NAME which
          match MODEL_CONSTRAINTS and ARCH before running prepare. This should be
          enabled for important automated jobs.
        name: PRERELEASE_NODES
    pipeline-scm:
      lightweight-checkout: true
      scm:
      - git:
          branches:
          - '*/admcleod_test'
          url: https://github.com/openstack-charmers/bot-control.git
      script-path: ./config/pipelines-mosci/1_full_cloud_prepare/Jenkinsfile.groovy
    project-type: pipeline
    properties:
    - raw:
        xml: |
          <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
          <autoRebuild>false</autoRebuild>
          <rebuildDisabled>false</rebuildDisabled>
          </com.sonyericsson.rebuild.RebuildSettings>
    - raw:
        xml: |
          <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
          <maxConcurrentPerNode>0</maxConcurrentPerNode>
          <maxConcurrentTotal>0</maxConcurrentTotal>
          <categories class="java.util.concurrent.CopyOnWriteArrayList" />
          <throttleEnabled>false</throttleEnabled>
          <throttleOption>project</throttleOption>
          <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
          <paramsToUseForLimit />
          </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    triggers: []
